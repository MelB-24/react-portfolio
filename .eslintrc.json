{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "standard-with-typescript",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks", // React
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
        "jsx": true
    }
  },
  "plugins": [
    "react", "@typescript-eslint"
  ],
  "rules": {
    "prettier/prettier": 0, // Disable Prettier
    "import/no-cycle": 0, // Slows down all linting
    "react/jsx-filename-extension": [1, {
      "extensions": [".jsx", ".tsx"] // .jsx/.tsx for UI, no UI in .js/.ts
    }],
    "react/jsx-props-no-spreading": 0, // Enable Prop Spreading
    "@typescript-eslint/no-empty-interface": 0, // Allow boilerplate empty interfaces for defining component props explicitly
    "@typescript-eslint/no-explicit-any": 0, // Nice for TS newbies but easily misused
    "@typescript-eslint/explicit-function-return-type": [0, {
      "allowExpressions": false
    }],
    "@typescript-eslint/restrict-template-expressions": 0,
    "@typescript-eslint/no-unsafe-call": 0,
    "@typescript-eslint/no-unsafe-return": 0,
    "@typescript-eslint/no-unsafe-assignment": 0,
    "@typescript-eslint/no-unsafe-member-access": 0,
    "@typescript-eslint/comma-dangle": 1,
    "react/prop-types": 0,
    "@typescript-eslint/naming-convention": [2, {
      "selector": "default",
      "format": ["camelCase", "PascalCase", "UPPER_CASE"],
      "leadingUnderscore": "allow",
      "filter": {
        "regex": "__typename",
        "match": false
      }
    }]
  }
}
